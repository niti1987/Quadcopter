/*
 *  rimSIMDTypes.h
 *  Rim Software
 *
 *  Created by Carl Schissler on 9/25/14.
 *  Copyright 2014 __MyCompanyName__. All rights reserved.
 *
 */

#ifndef INCLUDE_RIM_SIMD_TYPES_H
#define INCLUDE_RIM_SIMD_TYPES_H


#include "rimMathConfig.h"


#include "rimScalarMath.h"


#if RIM_SSE_VERSION_IS_SUPPORTED(1,0)
	#include <xmmintrin.h> // Include for SSE intrinsics
#endif

#if RIM_SSE_VERSION_IS_SUPPORTED(2,0)
	#include <emmintrin.h> // Include for SSE2 intrinsics
#endif

#if RIM_SSE_VERSION_IS_SUPPORTED(3,0)
	#include <pmmintrin.h> // Include for SSE3 intrinsics
#endif

#if RIM_SSE_VERSION_IS_SUPPORTED(3,1)
	#include <tmmintrin.h> // Include for SSSE3 intrinsics
#endif

#if RIM_SSE_VERSION_IS_SUPPORTED(4,1)
	#include <smmintrin.h> // Include for SSE4.2 intrinsics
#endif

#if RIM_SSE_VERSION_IS_SUPPORTED(4,2)
	#include <nmmintrin.h> // Include for SSE4.1 intrinsics
#endif


//##########################################################################################
//*****************************  Start Rim Math Namespace  *********************************
RIM_MATH_NAMESPACE_START
//******************************************************************************************
//##########################################################################################




//********************************************************************************
//********************************************************************************
//********************************************************************************
/// A class which contains a way to access various global properties of SIMD processing.
template < typename T >
class SIMDType
{
	public:
		
		//********************************************************************************
		//********************************************************************************
		//********************************************************************************
		//******	Maximum SIMD Width Accessor Method
			
			
			
			
			/// The maximum hardware-supported width for a SIMD scalar value with the given base element type.
			static const Size MAX_WIDTH = 0;
			
			
			
			
};




//##########################################################################################
//##########################################################################################
//############		
//############		Int32 Specialization
//############		
//##########################################################################################
//##########################################################################################




//********************************************************************************
//********************************************************************************
//********************************************************************************
/// A class which contains attributes for Int32-typed SIMDScalar processing.
template <>
class SIMDType<Int32>
{
	public:
		
		//********************************************************************************
		//********************************************************************************
		//********************************************************************************
		//******	Maximum SIMD Width Accessor Method
			
			
			
			
			/// The maximum hardware-supported width for a SIMD scalar value with the Int32 base element type.
			static const Size MAX_WIDTH = 4;
			
			
			
};




//##########################################################################################
//##########################################################################################
//############		
//############		Int64 Specialization
//############		
//##########################################################################################
//##########################################################################################




//********************************************************************************
//********************************************************************************
//********************************************************************************
/// A class which contains attributes for Int32-typed SIMDScalar processing.
template <>
class SIMDType<Int64>
{
	public:
		
		//********************************************************************************
		//********************************************************************************
		//********************************************************************************
		//******	Maximum SIMD Width Accessor Method
			
			
			
			
			/// The maximum hardware-supported width for a SIMD scalar value with the Int32 base element type.
			static const Size MAX_WIDTH = 2;
			
			
			
};




//##########################################################################################
//##########################################################################################
//############		
//############		Float32 Specialization
//############		
//##########################################################################################
//##########################################################################################




//********************************************************************************
//********************************************************************************
//********************************************************************************
/// A class which contains attributes for Float32-typed SIMDScalar processing.
template <>
class SIMDType<Float32>
{
	public:
		
		//********************************************************************************
		//********************************************************************************
		//********************************************************************************
		//******	Maximum SIMD Width Accessor Method
			
			
			
			
			/// The maximum hardware-supported width for a SIMD scalar value with the Float32 base element type.
			static const Size MAX_WIDTH = 4;
			
			
			
};




//##########################################################################################
//##########################################################################################
//############		
//############		Float64 Specialization
//############		
//##########################################################################################
//##########################################################################################




//********************************************************************************
//********************************************************************************
//********************************************************************************
/// A class which contains attributes for Float64-typed SIMDScalar processing.
template <>
class SIMDType<Float64>
{
	public:
		
		//********************************************************************************
		//********************************************************************************
		//********************************************************************************
		//******	Maximum SIMD Width Accessor Method
			
			
			
			
			/// The maximum hardware-supported width for a SIMD scalar value with the Float64 base element type.
			static const Size MAX_WIDTH = 2;
			
			
			
};




//##########################################################################################
//*****************************  End Rim Math Namespace  ***********************************
RIM_MATH_NAMESPACE_END
//******************************************************************************************
//##########################################################################################


#endif // INCLUDE_RIM_SIMD_TYPES_H
